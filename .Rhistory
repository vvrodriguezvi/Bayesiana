filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))
#Parametros a monitorear
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.4)) #simula normal para los betas ???? {a-1}
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 4500,
n.burnin = 500, model.file = modelo)
print(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
x17()
fit.mcmc <- as.mcmc(bayes.mod.fit)
x11()
plot(fit.mcmc)
fit.mcmc <- as.mcmc(bayes.mod.fit)
x11()
plot(fit.mcmc)
fit.mcmc <- as.mcmc(bayes.mod.fit)
x11()
plot(fit.mcmc)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
# lectura de base de datos
baseComp <- read.csv2("baseUsar.csv")
# organizando la base de datos con las variables a usar
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.4)) #simular los valores iniciales de los betas, con
# una normal poco informativa
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 2, n.iter = 1000,
n.burnin = 500, model.file = modelo)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.4)) #simular los valores iniciales de los betas, con
# una normal poco informativa
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1, n.iter = 4500,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
print(bayes.mod.fit)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.4)) #simular los valores iniciales de los betas, con
# una normal poco informativa
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 4500,
n.burnin = 1500, model.file = modelo)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.1,0.1)) #simular los valores iniciales de los betas, con
# una normal poco informativa
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 4500,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
print(bayes.mod.fit)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.001,0.001)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
# lectura de base de datos
baseComp <- read.csv2("baseUsar.csv")
# organizando la base de datos con las variables a usar
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.001,0.001)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
traceplot(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
fit.mcmc <- as.mcmc(bayes.mod.fit)
x11()
plot(fit.mcmc)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
# lectura de base de datos
baseComp <- read.csv2("baseUsar.csv")
# organizando la base de datos con las variables a usar
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
y <- pac_hos_
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
# lectura de base de datos
baseComp <- read.csv2("baseUsar.csv")
# organizando la base de datos con las variables a usar
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
head(fitted(fit))
exp(coef(fit))
exp(1.439); exp(2.433)
betasDim
exp(coef(fit))
print(bayes.mod.fit)
print(bayes.mod.fit)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
