select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales en factor
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
#base$pac_hos_ <- as.factor(base$pac_hos_)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#De forma convencional
fit <- glm(Datos1$pac_hos_ ~ Datos1$Edad+Datos1$modoViol+Datos1$tipo_ss_+ Datos1$sexo_, family = binomial())
exp(coef(fit))
head(fitted(fit))
y <- pac_hos_
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
X = model.matrix(~ x1 + x2 + x3 +x4) #8 betas por que las var son categoricas
betasDim <- head(X)
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
#Analisis de significancia
# - Intervalos de probabilidad posterior
#cadena simulada de los coeficientes de regresion
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
#Intervalos HDI para Beta_i
win.graph()
par(mfrow=c(dim(Beta.poste)[2],2))
for(i in 1:dim(Beta.poste)[2]){
#Inicio
HDI.interval.beta <- hdi(Beta.poste[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste[,i])
win.graph()
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
dim(Beta.poste)
print(bayes.mod.fit)
modeloF <- fit
summary(modeloF)
print(bayes.mod.fit)
modeloF <- glm(formula = y ~ x1 + x2 + x3 + x4, family = binomial())
summary(modeloF)
print(bayes.mod.fit)
summary(modeloF)
fit_mas <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(fit_mas)
print(bayes.mod.fit)
fit.mcmc <- as.mcmc(fit_mas)
fit_mas <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1, n.iter = 1000,
n.burnin = 500, model.file = modelo)
print(fit_mas)
fit.mcmc <- as.mcmc(fit_mas)
x11()
plot(fit.mcmc)
superdiag(fit.mcmc, burnin = 500)
superdiag(fit.mcmc)
print(fit_mas)
print(bayes.mod.fit)
fit_mas <- bayes.mod.fit
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 500, model.file = modelo)
print(bayes.mod.fit)
fit_mas <- bayes.mod.fit
print(fit_mas)
fit.mcmc <- as.mcmc(fit_mas)
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
modeloF <- glm(formula = y ~ x1 + x2 + x3 + x4, family = binomial())
summary(modeloF)
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
summary(factor(base$comuna))
base$pac_hos_ <- base$pac_hos_ -1
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol)
base$tipo_ss_ <- as.factor(base$tipo_ss_)
summary(base$sexo_)
summary(base$modoViol)
summary(base$tipo_ss_)
summary(base$pac_hos_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 10000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
table(x1)
# table(x1)
x2 <- tipo_ss_
table(x2)
# table(x2)
x3 <-  modoViol
table(x3)
# table(x3)
x4 <- sexo_
table(x4)
X = model.matrix(~ x1 + x2 + x3 + x4) #8 betas por que las var son categoricas
X
X <-  model.matrix(~ x1 + x2 + x3 + x4) #8 betas por que las var son categoricas
X
betasDim <- head(X)
betasDim
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k N. de parametros de las x
bayes.mod.params <- c("b")
set.seed(123)
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos reales son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
modeloF <- glm(formula = y ~ x1 + x2 + x3 + x4, family = binomial())
summary(modeloF)
summary(modeloF)
print(bayes.mod.fit)
print(bayes.mod.fit)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
library(tidyverse) #latex
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
# Lectura base de datos completa
baseComp <- read.csv2("baseUsar.csv")
# Base de datos filtrada por las variables a usar
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
# Aunque la variable Comuna no se usa en nuestro modelo, la quisimos incluir para hacer futuras
# comparaciones con los resultados.
# Ya que en el modelo logistico, la var. respuesta se tiene en cuenta una distribución
# bernoulli la cual solo toma valores entre 0 y 1, y en la base están en 1 y 2,
# restamos 1 para que esté entre 0 y 1
base$pac_hos_ <- base$pac_hos_ -1
# Convertir variales que son factores
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
# eliminar NA's de la variable modoViolencia y los datos atípicos de la edad
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
#Selección de una muestra para correr el modelo logístico
indv <- sample(1:53220, 10000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
# declaración de las variables a usar en el modelo
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
#Matriz que almacena los betas de las covariables
X <-  model.matrix(~ x1 + x2 + x3 + x4)
betasDim <- head(X) #8 betas por que las var son categoricas
# Definición del modelo
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k N. de parametros de las x
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos reales son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
modeloF <- glm(formula = y ~ x1 + x2 + x3 + x4, family = binomial())
summary(modeloF)
summary(y)
summary(factor(y))
print(bayes.mod.fit)
#librerías usadas
library(tidyverse) #latex
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
summary(base$pac_hos_)
summary(factor(base$pac_hos_))
str(base)
base$pac_hos_ <- abs(base$pac_hos_)
summary(factor(base$pac_hos_))
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 10000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X <-  model.matrix(~ x1 + x2 + x3 + x4)
betasDim <- head(X) #8 betas por que las var son categoricas
modelo <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { # apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) # definimos beta como vector
}
}
N = dim(Datos)[1]
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))  #k N. de parametros de las x
bayes.mod.params <- c("b")
set.seed(123)
bayes.mod.inits <- function(){ # 8 valores iniciales de la cadena.
list("b" = rnorm(8,0.01,0.01)) #simular los valores iniciales de los betas, con
# una normal poco informativa, no en 0 ya que los datos reales son > 0
}
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo)
print(bayes.mod.fit)
betasDim
traceplot(bayes.mod.fit)
traceplot(bayes.mod.fit)
################## logistic regression##################
********ESTADO COGNITIVO DE LOS ADULTOS MAYORES*********
********************************************************
library("MASS"); library(lattice);library("coda");library("MCMCpack")
install.packages("MCMCpack")
library("MASS")
library(lattice)
library("coda")
library("MCMCpack")
ibrary(splines)
library(splines)
library("survival")
library(leaps)
Datos
Datos <- Datos
y<- y
y
********************************************************************
posterior<-MCMClogit(pac_hos_~ Edad+tipo_ss_+modoViol+sexo_
, data=Datos,burnin=1000,mcmc=25000)
summary(posterior)
summary(posterior)
plot(posterior,trace=FALSE)
plot(posterior, density=FALSE)
win.graph()
plot(posterior,trace=FALSE)
win.graph()
plot(posterior, density=FALSE)
autocorr.plot(posterior)
geweke.plot(posterior,pvalue=0.05)
win.graph()
plot(posterior,trace=FALSE)
win.graph()
plot(posterior, density=FALSE)
win.graph()
autocorr.plot(posterior)
win.graph()
geweke.diag(posterior,frac1=0.1, frac2=0.5)
win.graph()
geweke.plot(posterior,pvalue=0.05)
posterior2<-MCMClogit(pac_hos_~ Edad+tipo_ss_+modoViol+sexo_ , b0=0, B0=.001,
data=datos,burnin=1000,mcmc=25000)
posterior2<-MCMClogit(pac_hos_~ Edad+tipo_ss_+modoViol+sexo_ , b0=0, B0=.001,
data=Datos,burnin=1000,mcmc=25000)
summary(posterior2)
win.graph()
plot(posterior2,trace=FALSE)
win.graph()
plot(posterior2, density=FALSE)
win.graph()
autocorr.plot(posterior2)
geweke.diag(posterior2)
win.graph()
geweke.plot(posterior2)
win.graph()
plot(posterior2,trace=FALSE)
win.graph()
plot(posterior2, density=FALSE)
win.graph()
autocorr.plot(posterior2)
geweke.diag(posterior2)
win.graph()
geweke.plot(posterior2)
summary(posterior2)
geweke.diag(posterior2)
geweke.diag(posterior1)
geweke.diag(posterior)
geweke.diag(posterior2)
posterior2
geweke.diag(posterior2)
print(bayes.mod.fit)
x2
x3
x4
X <-  model.matrix(~ x1 + x2 + x3 + x4)
head(X)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion", )
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_",
"modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
