#Tamano de la muestra
N = dim(datos2)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
dim(datos2)[1]
ncol(X)
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8)) #simula normal para los betas {9-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
par(mfrow=c(dim(Beta.poste)[2],2))
for(i in 1:dim(Beta.poste)[2]){
#Inicio
HDI.interval.beta <- hdi(Beta.poste[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste[,i])
win.graph()
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
#matriz de diseno para el modelo reducido
X2 = model.matrix(~ x2+x3+x4 ) #sin la variable edad
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(6))
}
bayes.mod.inits <- function(){
list("b" = rnorm(7))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit2)
print(bayes.mod.fit)
summary(bayes.mod.fit)
print(bayes.mod.fit)
print(bayes.mod.fit2)
5463.9-5394.9
post_mol1 <- extract(bayes.mod.fit, pars="beta")
head(X)
X0 = c((45 - mean(Edad))/sd(Edad), 0,0,1,0,1,0)
#estandarizo el ingreso
dim(Beta.poste)
Py1 = sapply(1:dim(Beta.poste)[1], function(i){exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,]))})
X0 = c((45 - mean(Edad))/sd(Edad), 0,0,1,0,1,0,0)
#estandarizo el ingreso
dim(Beta.poste)
Py1 = sapply(1:dim(Beta.poste)[1], function(i){exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,]))})
win.graph()
plot(density(Py1))
y.pred = sapply(1:dim(Beta.poste)[1], function(i){rbinom(1, 1, exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,])))})
table(y.pred)
##Comparacion empleando factores de Bayes
library(MASS)
verosimilitud = function(Beta, X, y){
res = ( (exp(X%*%Beta)/(1+exp(X%*%Beta)) )^y) * (( 1/(1+exp(X%*%Beta))  )^(1-y))
return(res)
}
#modelo 1
X1 = model.matrix(~ x1 )
#modelo 1
X1 = model.matrix(~ x2+x3+x4)
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3+x4)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
vero.marginal1
library(rstan);library(StanHeaders)
library(HDInterval)
View(X)
View(X)
datos2 <- Datos
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- (Edad - mean(Edad))/sd(Edad)
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3)
print(fit)
print(bayes.mod.fit)
print(bayes.mod.fit)
print(fit)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 9000)
print(fit)
str(fit@sim$samples)
fit@sim$samples
parameters = alpha3 <- extract(fit, pars = "beta")
str(parameters)
plot(density(parameters$beta[,7]))
acf(parameters$beta[,7])
ts.plot(parameters$beta[,7])
modelo_freq <- glm(y ~ x1 + x2+x3+x4, data = datos2, family = binomial)
summary(modelo_freq)
print(fit)
par(mfrow=c(dim(Beta.poste$beta)[2],2))
for(i in 1:dim(Beta.poste$beta)[2]){
#Inicio
i=6
HDI.interval.beta <- hdi(Beta.poste$beta[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste$beta[,i])
win.graph()
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
fit@sim$samples
ts.plot(parameters$beta)
print(fit)
for(i in 8){
ts.plot(parameters$beta[,i])
}
for(i in 8){
win.graph()
par(mfrow=c(4,4))
ts.plot(parameters$beta[,i])
}
for(i in 1:8){
win.graph()
par(mfrow=c(4,4))
ts.plot(parameters$beta[,i])
}
win.graph()
par(mfrow=c(4,4))
for(i in 1:8){
ts.plot(parameters$beta[,i])
}
win.graph()
par(mfrow=c(2,4))
for(i in 1:8){
ts.plot(parameters$beta[,i], ylab = parameters$beta[,i])
}
parameters$beta
win.graph()
par(mfrow=c(2,4))
for(i in 1:8){
ts.plot(parameters$beta[,i])
}
plot(density(Beta.poste$beta[,4]))
plot(density(parameters$beta[,7]))
Beta.poste = extract(fit, pars = "beta")
dim(Beta.poste$beta)[2]
for(i in 1:dim(Beta.poste$beta)[2]){
HDI.interval.beta <- hdi(Beta.poste$beta[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste$beta[,i])
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
win.graph()
par(mfrow=c(2,4))
for(i in 1:dim(Beta.poste$beta)[2]){
HDI.interval.beta <- hdi(Beta.poste$beta[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste$beta[,i])
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
head(X)
X0 = c((20 - mean(Edad)/sd(Edad)),1,0,0,0,1,0)
y.pred = sapply(1:dim(Beta.poste$beta)[1],
function(i){rbinom(1, 1,
exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,])))})
dim(Beta.poste$beta)[1]
dim(Beta.poste1)[1]
y.pred = sapply(1:dim(Beta.poste1)[2], function(i){rbinom(1, 1,
exp(X0%*%Beta.poste1[i,])/ (1 + exp(X0%*%Beta.poste1[i,])))})
y.pred = sapply(1:dim(Beta.poste$beta)[1],
function(i){rbinom(1, 1,
exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,])))})
head(X)
X0 = c(1,(20 - mean(Edad)/sd(Edad)),1,0,0,0,1,0)
X0 = c(1,(20 - mean(Edad)/sd(Edad)),1,0,0,0,1,0)
y.pred = sapply(1:dim(Beta.poste$beta)[1],
function(i){rbinom(1, 1,
exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,])))})
dim(Beta.poste$beta)[1]
X_1 = model.matrix(~ x1+x2+x3) #7 betas sin género
length()
head(X_1)
X_2 = model.matrix(~ x1+x2+x3) #7 betas. sin género
head(X_2)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X_2) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 9000)
stan_data_2 <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X_2) # numero de varaibles
)
fit2 <- stan(file = 'pois_model.stan', data = stan_data_2, chains = 3, iter = 9000)
ncol(X_2)
nrow(datos2)
stan_data_2 <- list(
"X" = X_2,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X_2) # numero de varaibles
)
fit2 <- stan(file = 'pois_model.stan', data = stan_data_2, chains = 3, iter = 9000)
print(fit2)
print(fit)
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 9000)
print(bayes.mod.fit)
print(bayes.mod.fit)
print(bayes.mod.fit)
print(bayes.mod.fit)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
dplyr::select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_","modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
base$pac_hos_ <- abs(base$pac_hos_)
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 25000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
datos2 <- Datos
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- (Edad - mean(Edad))/sd(Edad) #edad estandarizada
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 9000)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
library(rstan);library(StanHeaders)
library("MASS");library("MCMCpack")
library(splines); library("survival"); library(leaps)
library(dplyr)
library(R2jags)
library(HDInterval)
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
library(rstan);library(StanHeaders)
library("MASS");library("MCMCpack")
library(splines); library("survival"); library(leaps)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
dplyr::select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_","modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
base$pac_hos_ <- abs(base$pac_hos_)
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 20000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
datos2 <- Datos
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- (Edad - mean(Edad))/sd(Edad) #edad estandarizada
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 10000)
print(fit)
X_2 = model.matrix(~ x1+x2+x3) #7 betas. sin género
head(X_2)
stan_data_2 <- list(
"X" = X_2,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X_2) # numero de varaibles
)
fit2 <- stan(file = 'pois_model.stan', data = stan_data_2, chains = 3, iter = 10000)
print(fit2)
X_3 = model.matrix(~ x2+x3) #7 betas. sin género
head(X_3)
stan_data_3 <- list(
"X" = X_3,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X_3) # numero de varaibles
)
fit3 <- stan(file = 'pois_model.stan', data = stan_data_3, chains = 3, iter = 9000)
print(fit3)
verosimilitud = function(Beta, X, y){
res = ((exp(X%*%Beta)/(1+exp(X%*%Beta)))^y) * (( 1/(1+exp(X%*%Beta))  )^(1-y))
return(res)
}
post_mol1 <- extract(fit, pars="beta")
post_mol2 <- extract(fit2, pars="beta")
post_mol3 <- extract(fit3, pars="beta")
post_mol1
vero.marginal1 = mean(sapply(1:dim(post_mol1$beta)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(post_mol1$beta[j,],
X_signi[i,], y[i])}))))))
vero.marginal1 = mean(sapply(1:dim(post_mol1$beta)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(post_mol1$beta[j,],
X[i,], y[i])}))))))
1:dim(post_mol1$beta)[1]
dim(post_mol1$beta)[1]
vero.marginal1 = mean(sapply(1:dim(post_mol1$beta)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(post_mol1$beta[j,],
X[i,], y[i])}))))))
head(X)
print(fit)
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
vero.marginal3 = mean(sapply(1:dim(post_mol3$beta)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(post_mol3$beta[j,],
X_3[i,], y[i])}))))))
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
indv <- sample(1:53220, 10000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
datos2 <- Datos
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- (Edad - mean(Edad))/sd(Edad) #edad estandarizada
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
# table(x4)
#---------------Modelo completo--------------------------------------------
X = model.matrix(~ x1 + x2 + x3+x4) #8 betas por que las var son categoricas
head(X)
stan_data <- list(
"X" = X,
"y" = y,
"N" = nrow(datos2), # Numero de observaciones
"P" = ncol(X) # numero de varaibles
)
fit <- stan(file = 'pois_model.stan', data = stan_data, chains = 3, iter = 10000)
