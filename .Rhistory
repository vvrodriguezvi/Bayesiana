}
#modelo 1
X1 = model.matrix(~ x2+x3+x4 )
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3+x4)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1],
function(j) exp(sum(log(sapply(1:length(y),
function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
#montecarlo(numeradoe de B12)
#Verosimilitud marginal modelo 2
vero.marginal2 = mean(sapply(1:dim(Beta.simu.poste.M2)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M2[j,], X2[i,], y[i])}))))))
vero.marginal2
Beta.simu.poste.M1[1,]
X1[1,]; y[1]
length(y)
X2[1,]; y[1]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
dplyr::select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_","modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
base$pac_hos_ <- abs(base$pac_hos_)
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #11 betas por que las var son categoricas
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { #apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) #definimos beta como vector
}
}
#Tamano de la muestra
N = dim(datos2)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.001)) #simula normal para los betas ???? {a-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
#Tamano de la muestra
N = dim(datos2)[1]
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.001)) #simula normal para los betas ???? {a-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
X2 = model.matrix(~ x2+x3+x4) #solo para el estrato x1
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
##Comparacion empleando factores de Bayes
library(MASS)
verosimilitud = function(Beta, X, y){
res = ( (exp(X%*%Beta)/(1+exp(X%*%Beta)) )^y) * (( 1/(1+exp(X%*%Beta))  )^(1-y))
return(res)
}
#modelo 1
X1 = model.matrix(~ x1 )
#modelo 1
X1 = model.matrix(~ x2 + x3+x4)
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3+x4)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
vero.marginal1
#montecarlo(numeradoe de B12)
#Verosimilitud marginal modelo 2
vero.marginal2 = mean(sapply(1:dim(Beta.simu.poste.M2)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M2[j,], X2[i,], y[i])}))))))
B12 = vero.marginal1/vero.marginal2
1/B12
#modelo 1
#X1 = model.matrix(~ x2 + x3+x4)
X1 = model.matrix(~ x1+x2 + x3)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
B12 = vero.marginal1/vero.marginal2
1/B12
1.4e+21
vero.marginal1
#modelo 1
#X1 = model.matrix(~ x2 + x3+x4)
X1 = model.matrix(~x2 + x3)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
#modelo 1
#X1 = model.matrix(~ x2 + x3+x4)
X1 = model.matrix(~x2 + x3)
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3+x4)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
X3 = model.matrix(~ x2+x3) #solo para el estrato x1
dim(X2)
X3 = model.matrix(~ x2+x3) #solo para el estrato x1
dim(X3)
dat.jags3 <- list(y=y, x = X3, N = N, K = ncol(X3))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(6,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit3 <- jags(data = dat.jags3, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
#modelo 1
#X1 = model.matrix(~ x2 + x3+x4)
X1 = model.matrix(~x2 + x3)
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3+x4)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit3$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
vero.marginal1
#montecarlo(numeradoe de B12)
#Verosimilitud marginal modelo 2
vero.marginal2 = mean(sapply(1:dim(Beta.simu.poste.M2)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M2[j,], X2[i,], y[i])}))))))
B12 = vero.marginal1/vero.marginal2
1/B12
BF = BayesFactor ( bayes.mod.fit,bayes.mod.fit2,bayes.mod.fit3 )
bayes.mod.fit3 <- jags(data = dat.jags3, inits = bayes.mod.inits,
t
f5))
modelo1 <- MCMClogit(pac_hos_~ Edad+tipo_ss_+modoViol+sexo_ , b0=0, B0=.001,
data=Datos,burnin=1000,mcmc=25000, marginal.likelihood = "Laplace")
modelo2 <- MCMClogit(pac_hos_~ Edad+tipo_ss_+modoViol, b0=0, B0=.001,
data=Datos,burnin=1000,mcmc=25000, marginal.likelihood = "Laplace")
modelo3 <- MCMClogit(pac_hos_~ tipo_ss_+modoViol+sexo_ , b0=0, B0=.001,
data=Datos,burnin=1000,mcmc=25000, marginal.likelihood = "Laplace")
modelo4 <- MCMClogit(pac_hos_~ tipo_ss_+modoViol , b0=0, B0=.001,
data=Datos,burnin=1000,mcmc=25000, marginal.likelihood = "Laplace")
BF = BayesFactor ( modelo1,modelo2,modelo3,modelo4 )
print(BF)
1/B12
B12
BF = BayesFactor ( modelo1,modelo4 )
print(BF)
vero.marginal1
PostProbMod ( BF )
library(dplyr)
library(R2jags)
library(HDInterval)
library(coda)
library(rjags)
library(lattice)
library(superdiag)
library(stringr)
library(ISLR)
library(ggplot2)
library("MASS");library("MCMCpack")
library(splines); library("survival"); library(leaps)
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
dplyr::select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_","modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
base$pac_hos_ <- abs(base$pac_hos_)
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #11 betas por que las var son categoricas
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { #apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) #definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.001)) #simula normal para los betas ???? {a-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
X2 = model.matrix(~ x2+x3+x4) #solo para el estrato x1
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
X3 = model.matrix(~ x2+x3) #solo para el estrato x1
dim(X3)
dat.jags3 <- list(y=y, x = X3, N = N, K = ncol(X3))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(6,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit3 <- jags(data = dat.jags3, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
X4 = model.matrix(~ x1+x2+x3) #solo para el estrato x1
dim(X4)
dat.jags4 <- list(y=y, x = X4, N = N, K = ncol(X4))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit4 <- jags(data = dat.jags4, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit)
print(bayes.mod.fit2)
print(bayes.mod.fit3)
print(bayes.mod.fit4)
indv <- sample(1:53220, 1000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #11 betas por que las var son categoricas
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { #apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) #definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.001)) #simula normal para los betas ???? {a-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
X2 = model.matrix(~ x2+x3+x4) #Sin la edad
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
X3 = model.matrix(~ x2+x3)
dim(X3)
dat.jags3 <- list(y=y, x = X3, N = N, K = ncol(X3))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(6,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit3 <- jags(data = dat.jags3, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
X4 = model.matrix(~ x1+x2+x3) #solo para el estrato x1
dim(X4)
dat.jags4 <- list(y=y, x = X4, N = N, K = ncol(X4))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit4 <- jags(data = dat.jags4, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit)
print(bayes.mod.fit2)
print(bayes.mod.fit3)
print(bayes.mod.fit4)
468.3-467.1
468.3-466.4
468.3-465.8
baseComp <- read.csv2("baseUsar.csv")
base <- baseComp %>%
dplyr::select("pac_hos_","Edad","sexo_", "comuna","tip_cas_","tipo_ss_","modoViol", "year_") %>%
filter(baseComp$comuna !="SIN INFORMACION",baseComp$comuna != "Sin informacion")
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
base$comuna <- str_replace(base$comuna, "Corregimiento De Santa Elena","Santa Elena")
base$pac_hos_ <- base$pac_hos_ -2
base$pac_hos_ <- abs(base$pac_hos_)
base$sexo_ <- as.factor(base$sexo_)
base$modoViol <- as.factor(base$modoViol) #hay presencia de NA's
base$tipo_ss_ <- as.factor(base$tipo_ss_)
Datos1 <- base
Datos1 <- Datos1[!is.na(Datos1$modoViol),]
Datos1 <- Datos1[!Datos1$Edad < 1,]
Datos1 <- Datos1[!Datos1$Edad >=100,]
indv <- sample(1:53220, 15000)
Datos <- Datos1[indv,]
Datos <- Datos %>%
dplyr::select("pac_hos_","Edad","sexo_","tipo_ss_","modoViol" )
attach(Datos)
#variable respuesta: Si el paciente es hospitalizado o no.
y <- pac_hos_
# Covariables:
#   Edad
#   Modo violencia, 3 niveles (fisica, sexual y sicológica)
#   Tipo de seguridad social, 4 niveles (contr, subs, especial, no tiene)
#   genero, 2 niveles (masculino, femenino)
x1 <- Edad
# table(x1)
x2 <- tipo_ss_
# table(x2)
x3 <-  modoViol
# table(x3)
x4 <- sexo_
X = model.matrix(~ x1 + x2 + x3+x4) #11 betas por que las var son categoricas
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,])
}
for (j in 1:K) { #apriori del modelo (vaga o poco informativa)
b[j] ~ dnorm(0,1.0E-12) #definimos beta como vector
}
}
#Tamano de la muestra
N = dim(Datos)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X)) #k #de parametros(xs)
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){ # 11 valores iniciales de la cadena.
list("b" = rnorm(8,0,0.001)) #simula normal para los betas ???? {a-1}
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1500, model.file = modelo1)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
X2 = model.matrix(~ x2+x3+x4) #Sin la edad
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(7,0,0.001))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit2)
