base$pac_hos_ <- factor(base$pac_hos_)
base$tip_cas_ <- factor(base$tip_cas_)
base$sexo_ <- factor(base$sexo_)
summary(base)
library(stringr)
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
levels(as.factor(base$comuna))
otra <- read.csv("04._Violencia_de_G_nero_e_intrafamiliar_de_enero_2015_a_Mayo_2022_-_Semana_Epidemiol_gica_19.csv", encoding = "UTF8")
head(otra)
summary(factor(otra$nom_eve))
cosa <- filter(base, edad <= 18)
head(base)
cosa <- filter(base, edad_ <= 18)
length(cosa)
cosa <- filter(base, edad_ <= 18)
cosa
length(cosa)
summary(factor(baseComp$uni_med_))
head(baseComp)
cosa2 <- filter(base, uni_med_ == 2)
cosa2 <- filter(baseComp, uni_med_ == 2)
cosa
length(cosa)
cosa2 <- filter(baseComp, uni_med_ == 2)
cosa2
length(cosa2)
library(tidyverse)
library(dplyr)
library(stringr)
library(agricolae)
library(tidyverse)
library(dplyr)
library(stringr)
library(agricolae)
baseComp <- read.csv2("sivigila_violencia.csv")
base <- baseComp %>%
select("edad_","nombre_barrio","sexo_", "comuna","tip_cas_",
"pac_hos_","mod_viol", "year_" ) %>%
filter(baseComp$nombre_barrio!="SIN INFORMACION",baseComp$nombre_barrio!="Sin informacion",
baseComp$comuna !="SIN INFORMACION",baseComp$comuna !="Sin informacion")
base2 <- base %>%
filter(base$comuna != "Corregimiento De Santa Elena",
base$comuna != "Santa Elena", base$comuna != "Corregimiento de San Cristobal",
base$comuna !="San Sebastian de Palmitas", base$comuna !="San Antonio de Prado",
base$comuna !="Altavista")
base2$comuna <- str_replace(base2$comuna, "Doce De Octubre","Doce de Octubre")
base2 <- base2 %>%
filter(base2$mod_viol != "8",base2$mod_viol != "11")
base$mod_viol <- factor(base$mod_viol)
base$pac_hos_ <- factor(base$pac_hos_)
base$tip_cas_ <- factor(base$tip_cas_)
base$sexo_ <- factor(base$sexo_)
#Gráficos
tabla1 <- table(base2$comuna, rownames(base2$comuna))
tabla1 <- prop.table(tabla1)
xx <- barplot(tabla1, col= "aquamarine2",
ylab='Frecuencia relativa', las=3, ylim = c(0, 0.12),
main = "Casos de violencia por comuna", cex.names  = 0.7)
text(x=xx, y=tabla1, pos=3, cex=0.8, col="black",
label=round(tabla1, 4))
tabla2 <- table(base2$sexo_, base2$comuna)
g2 <- barplot(tabla2, beside = TRUE, las=3, ylab='Frecuencia',
col = c("plum1", "aquamarine1"), ylim = c(0,5500), cex.names = 0.6,
main = "Casos de violencia en las comunas por género")
text(x=g2, y=tabla2, pos=3, cex=0.8, col="black",
label=round(tabla2, 4))
legend('topleft', legend=rownames(tabla2), bty='n',
fill=c("plum1", "aquamarine1"))
#Gráficos
tabla1 <- table(base2$comuna, rownames(base2$comuna))
tabla1 <- prop.table(tabla1)
xx <- barplot(tabla1, col= "aquamarine2",
ylab='Frecuencia relativa', las=3, ylim = c(0, 0.12),
main = "Casos de violencia por comuna", cex.names  = 0.7)
text(x=xx, y=tabla1, pos=3, cex=0.8, col="black",
label=round(tabla1, 4))
tabla2 <- table(base2$sexo_, base2$comuna)
g2 <- barplot(tabla2, beside = TRUE, las=3, ylab='Frecuencia',
col = c("plum1", "aquamarine1"), ylim = c(0,5500), cex.names = 0.6,
main = "Casos de violencia en las comunas por género")
text(x=g2, y=tabla2, pos=3, cex=0.8, col="black",
label=round(tabla2, 4))
legend('topleft', legend=rownames(tabla2), bty='n',
fill=c("plum1", "aquamarine1"))
## segunda variable
tabla3 <- table(base2$mod_viol)
tabla3 <- prop.table(tabla3)
g3 <- barplot(tabla3, col= "aquamarine",
ylab='Frecuencia relativa', las=1, ylim = c(0, 0.6),
main = "Modo de violencia", cex.names  = 0.7)
text(x=g3, y=tabla3, pos=3, cex=0.8, col="black",
label=round(tabla3, 4)*100)
tabla4 <- table(base2$year_)
tabla4 <- prop.table(tabla4)
g3 <- barplot(tabla4, col= "aquamarine",
ylab='Frecuencia relativa', las=1, ylim = c(0, 0.4),
main = "Casos de violencia por año", cex.names  = 0.7)
text(x=g3, y=tabla4, pos=3, cex=0.8, col="black",
label=round(tabla4, 4)*100)
curve(tabla4,col = "magenta")
#RESUMENES ESTADISTICOS
sexo <- factor(base2$sexo_, levels=c("F","M"),
labels=c("Femenino","Masculino"))
ModViolencia <- factor(base2$mod_viol, levels=c("1","10", "12", "14", "2",
"3", "4", "5", "6", "7", "SD"),
labels=c("Física","Trata de personas","Actos sexuales con uso de la fuerza",
"Otros actos sexuales","Psicológica","Negligencia y abandona",
"Abuso sexual","Acoso sexual","Violación",
"Explotación sexual de niños y adolescentes","Sin información"))
tablaSexo <- table(sexo);
tablaSexo <- prop.table(tablaSexo)
tablaMod <- table(ModViolencia)
tablaMod <- prop.table(tablaMod)
prop.table(table(sexo,ModViolencia),2)
ed <- table.freq(hist(base2$edad_,plot=FALSE))
ed
a <- table.freq(base2$comuna)
summary(base2)
baseH <- base2 %>%
filter(base2$sexo_ == "M")
knitr::opts_chunk$set(echo = TRUE)
summary(factor(base$uni_med_))
summary(factor(base$mod_viol))
summary(factor(baseCompe$tipo_ss_))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
baseComp <- read.csv2("sivigila_violencia (1).csv")
base <- baseComp %>%
select("edad_","nombre_barrio","sexo_", "comuna","tip_cas_",
"pac_hos_","mod_viol", "year_" ) %>%
filter(baseComp$nombre_barrio!="SIN INFORMACION",baseComp$nombre_barrio!="Sin informacion",
baseComp$comuna !="SIN INFORMACION",baseComp$comuna !="Sin informacion")
base$mod_viol <- factor(base$mod_viol)
base$pac_hos_ <- factor(base$pac_hos_)
base$tip_cas_ <- factor(base$tip_cas_)
base$sexo_ <- factor(base$sexo_)
summary(base)
library(stringr)
base$comuna <- str_replace(base$comuna, "Doce De Octubre","Doce de Octubre")
levels(as.factor(base$comuna))
otra <- read.csv("04._Violencia_de_G_nero_e_intrafamiliar_de_enero_2015_a_Mayo_2022_-_Semana_Epidemiol_gica_19.csv", encoding = "UTF8")
head(otra)
summary(factor(otra$nom_eve))
head(base)
cosa <- filter(base, edad_ <= 18)
cosa
length(cosa)
summary(factor(baseComp$uni_med_))
head(baseComp)
cosa2 <- filter(baseComp, uni_med_ == 2)
cosa2
length(cosa2)
summary(factor(baseCompe$tipo_ss_))
summary(factor(baseCompe$tipo_ss_))
summary(factor(baseCompe$tipo_ss_))
summary(factor(baseComp$tipo_ss_))
knitr::opts_chunk$set(echo = TRUE)
#cargo librerias
library(R2jags)
library(HDInterval)
#lectura base de datos
datos = read.csv(file.choose())
str(datos)
head(datos)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:32795, 700)
datos2 = datos[indv,]
head(datos2)
datos2 = datos2[-which(datos2==-99, arr.ind = TRUE), ]
knitr::opts_chunk$set(echo = TRUE)
#cargo librerias
library(R2jags)
library(HDInterval)
#lectura base de datos
datos = read.csv(file.choose())
str(datos)
head(datos)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:32795, 700)
datos2 = datos[indv,]
head(datos2)
datos2 = datos2[-which(datos2==-99, arr.ind = TRUE), ]
dim(datos2)
y = datos2$P_176
x1 = as.factor(datos2$P_10)
x2 = as.factor(datos2$P_146)
x3 = (datos2$P_235 - mean(datos2$P_235))/sd(datos2$P_235)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3)
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,]) # producto entre las cobaviables (predictor)
}
for (j in 1:K) {
b[j] ~ dnorm(0,1.0E-12) # definiendo aprioris poco informativas vagas
}
}
#Tamano de la muestra
N = dim(datos2)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){
list("b" = rnorm(11))
}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit)
traceplot(bayes.mod.fit)
#Analisis de significancia
# - Intervalos de probabilidad posterior
#cadena simulada de los coeficientes de regresion
Beta.poste <- bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.poste)
#Intervalos HDI para Beta_i
dev.new()
par(mfrow=c(dim(Beta.poste)[2],2))
for(i in 1:dim(Beta.poste)[2]){
#Inicio
HDI.interval.beta <- hdi(Beta.poste[,i])
value1 <- HDI.interval.beta[1]
value2 <- HDI.interval.beta[2]
DENSITITY.BETA <- density(Beta.poste[,i])
plot(DENSITITY.BETA, main = "Densidad Posterior", xlab = parse(text=(paste0("beta[",i,"]"))))
DENSITITY.BETAy <- DENSITITY.BETA$y
DENSITITY.BETAx <- DENSITITY.BETA$x
# Lower and higher indices on the X-axis
l <- min(which(DENSITITY.BETAx >= value1))
h <- max(which(DENSITITY.BETAx < value2))
polygon(c(DENSITITY.BETAx[c(l, l:h, h)]),
c(0, DENSITITY.BETAy[l:h], 0),
col = "slateblue1")
#Fin
}
dev.off()
#matriz de diseno para el modelo reducido
X2 = model.matrix(~ x1 )
dim(X2)
dat.jags2 <- list(y=y, x = X2, N = N, K = ncol(X2))
bayes.mod.params <- c("b")
bayes.mod.inits <- function(){
list("b" = rnorm(6))
}
#ajuste del modelo reducido
set.seed(123)
bayes.mod.fit2 <- jags(data = dat.jags2, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
print(bayes.mod.fit2)
#Prediccion en un valor X0
X0 = c(1, 0, 0, 1, 0, 0, 0, 1, 0, 0, (600000 - mean(datos2$P_235))/sd(datos2$P_235))
dim(Beta.poste)
#predictor
Py1 = sapply(1:dim(Beta.poste)[1], function(i){exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,]))})
plot(density(Py1))
y.pred = sapply(1:dim(Beta.poste)[1], function(i){rbinom(1, 1, exp(X0%*%Beta.poste[i,])/ (1 + exp(X0%*%Beta.poste[i,])))})
table(y.pred)
##Comparacion empleando factores de Bayes
#library(MASS)
verosimilitud = function(Beta, X, y){
res = ( (exp(X%*%Beta)/(1+exp(X%*%Beta)) )^y) * (( 1/(1+exp(X%*%Beta))  )^(1-y))
return(res)
}
#modelo 1
X1 = model.matrix(~ x1 )
#modelos 2
X2 = model.matrix(~ x1 + x2 + x3)
#posterior modelo 1
Beta.simu.poste.M1 = bayes.mod.fit2$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M1)
#posterior modelo 2
Beta.simu.poste.M2 = bayes.mod.fit$BUGSoutput$sims.list$b
dim(Beta.simu.poste.M2)
#Verosimilitud marginal modelo 1
vero.marginal1 = mean(sapply(1:dim(Beta.simu.poste.M1)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M1[j,], X1[i,], y[i])}))))))
#Verosimilitud marginal modelo 2
vero.marginal2 = mean(sapply(1:dim(Beta.simu.poste.M2)[1], function(j) exp(sum(log(sapply(1:length(y), function(i){verosimilitud(Beta.simu.poste.M2[j,], X2[i,], y[i])}))))))
B12 = vero.marginal1/vero.marginal2
1/B12
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
#install.packages("jsonlite", type = "source")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars.win")
if (!file.exists(M)) file.create(M)
cat("\n CXX14FLAGS += -mtune=native -O3 -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2",
file = M, sep = "\n", append = FALSE)
install.packages("rstan")
library(rstan)
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
[-which(datos2==-99, arr.ind = TRUE), ]
knitr::opts_chunk$set(echo = TRUE)
#lectura base de datos
datos = read.csv(file.choose())
str(datos)
head(datos)
#lectura base de datos
datos = read.csv(file.choose())
str(datos)
head(datos)
summary(factor(datos$P_176))
summary(factor(datos$P_176))
length(datos)
summary(factor(datos$P_176))
length(datos$P_176)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:32795, 700)
datos2 = datos[indv,]
head(datos2)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = datos[indv,]
head(baseComp2)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = baseComp[indv,]
head(baseComp2)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = baseComp[indv,c(3,5,8,13,14)]
head(baseComp2)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = baseComp2$pac_hos_
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
knitr::opts_chunk$set(echo = TRUE)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
X = model.matrix(~ x1 + x2 + x3 + x4)
x1
knitr::opts_chunk$set(echo = TRUE)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
# lectura de base de datos
baseComp <- read.csv2("sivigila_violencia.csv")
head(baseComp)
summary(as.factor(baseComp$pac_hos_))
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = baseComp[indv,c(3,5,8,13,14)]
head(baseComp2)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
x1
x1 = baseComp2$edad_
x1
baseComp2$edad_
baseComp2$edad_
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = baseComp[indv,c(3,5,8,13,14)]
head(baseComp2)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
baseComp2 = baseComp2[-which(baseComp2==-99, arr.ind = TRUE), ] #no se que hace esta monda
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
head(x1)
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
head(baseComp$edad_)
head(baseComp2$edad_)
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
head(x1)
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
head(baseComp2$edad_)
#cargo de librerias
library(tidyverse)
library(dplyr)
library(R2jags)
library(HDInterval)
# lectura de base de datos
baseComp <- read.csv2("sivigila_violencia.csv")
head(baseComp)
summary(as.factor(baseComp$pac_hos_))
#MUESTRA DE 700 INDIVIDUOS
set.seed(123)
indv = sample(1:length(baseComp$pac_hos_), 700)
baseComp2 = baseComp[indv,c(3,5,8,13,14)]
head(baseComp2)
dim(baseComp2)
# definiendo variables del modelo
y = as.factor(baseComp2$pac_hos_)
x1 = baseComp2$edad_
head(x1)
x2 = as.factor(baseComp2$sexo_)
x3 = as.factor(baseComp2$mod_viol)
x4 = as.factor(baseComp2$tipo_ss_)
# matriz de diseño
X = model.matrix(~ x1 + x2 + x3 + x4)
head(X)
modelo1 <- function(){
for (i in 1:N) {
y[i] ~ dbern(p[i])
# logit(p[i]) <- max(-20,min(20,inprod(b[], x[i,])))
logit(p[i]) <- inprod(b[], x[i,]) # producto entre las cobaviables (predictor)
}
for (j in 1:K) {
b[j] ~ dnorm(0,1.0E-12) # definiendo aprioris poco informativas vagas
}
}
#Tamano de la muestra
N = dim(datos2)[1]
#Tamano de la muestra
N = dim(baseComp2)[1]
# Input o informacion de entrada
data.input.jags <- list(y=y, x = X, N = N, K = ncol(X))
#Parametros a monitorear
bayes.mod.params <- c("b")
#Puntos iniciales de la cadena MCMC
bayes.mod.inits <- function(){
list("b" = rnorm(11))
}
```{r}
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
set.seed(123)
bayes.mod.fit <- jags(data = data.input.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params, n.chains = 3, n.iter = 9000,
n.burnin = 1000, model.file = modelo1)
